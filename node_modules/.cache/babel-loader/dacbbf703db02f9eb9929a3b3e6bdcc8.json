{"ast":null,"code":"var _jsxFileName = \"/Users/Siouxx/Library/Mobile Documents/com~apple~CloudDocs/UDEMY/UdemyReactAppSWM/LoginAppTest/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'User_Input') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === 'Input_Blur') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst paswordReducer = (state, action) => {\n  if (action.type === 'Pasword_Input') {\n    return {\n      value: action.val,\n      isValid: event.target.value.trim().length > 6\n    };\n  }\n\n  if (action.type === 'Pasword_Blur') {\n    return {\n      value: state.value,\n      isValid: event.target.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: false\n  });\n  const [paswordState, dispatchPasword] = useReducer(paswordReducer, {\n    value: '',\n    isValid: false\n  });\n  useEffect(() => {\n    return () => {};\n  }, []); // useEffect(() => {\n  //   const identifier = setTimeout(() => {\n  //     setFormIsValid(\n  //       enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //     );\n  //   }, 500);\n  //CleanupFunctions whenever conmponent unmounts from the DOM\n  //   return () => {\n  //     clearTimeout(identifier);\n  //   };\n  // }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'User_Input',\n      val: event.target.value\n    }); // setEnteredEmail(event.target.value);\n\n    setFormIsValid(event.target.value.includes('@') && paswordState.isValid);\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPasword({\n      type: 'User_Input',\n      val: event.target.value\n    });\n    setFormIsValid(emailState.value.includes('@') && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'Input_Blur'\n    }); // setEmailIsValid(emailState.isValid.includes('@'));\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchEmail({\n      type: 'Input_Blur'\n    }); // setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, enteredPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"NAiGb97Asz85IePQEM+4xU9bOZc=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/Siouxx/Library/Mobile Documents/com~apple~CloudDocs/UDEMY/UdemyReactAppSWM/LoginAppTest/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","Card","classes","Button","emailReducer","state","action","type","value","val","isValid","includes","paswordReducer","event","target","trim","length","Login","props","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","emailState","dispatchEmail","paswordState","dispatchPasword","emailChangeHandler","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AAEA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,MAAIA,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,WAAO;AAAEC,MAAAA,KAAK,EAAEF,MAAM,CAACG,GAAhB;AAAqBC,MAAAA,OAAO,EAAEJ,MAAM,CAACG,GAAP,CAAWE,QAAX,CAAoB,GAApB;AAA9B,KAAP;AACD;;AACD,MAAIL,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,WAAO;AAAEC,MAAAA,KAAK,EAAEH,KAAK,CAACG,KAAf;AAAsBE,MAAAA,OAAO,EAAEL,KAAK,CAACG,KAAN,CAAYG,QAAZ,CAAqB,GAArB;AAA/B,KAAP;AACD;;AACD,SAAO;AAAEH,IAAAA,KAAK,EAAE,EAAT;AAAaE,IAAAA,OAAO,EAAE;AAAtB,GAAP;AACD,CARD;;AASA,MAAME,cAAc,GAAG,CAACP,KAAD,EAAQC,MAAR,KAAmB;AACxC,MAAIA,MAAM,CAACC,IAAP,KAAgB,eAApB,EAAqC;AACnC,WAAO;AAAEC,MAAAA,KAAK,EAAEF,MAAM,CAACG,GAAhB;AAAqBC,MAAAA,OAAO,EAAEG,KAAK,CAACC,MAAN,CAAaN,KAAb,CAAmBO,IAAnB,GAA0BC,MAA1B,GAAmC;AAAjE,KAAP;AACD;;AACD,MAAIV,MAAM,CAACC,IAAP,KAAgB,cAApB,EAAoC;AAClC,WAAO;AAAEC,MAAAA,KAAK,EAAEH,KAAK,CAACG,KAAf;AAAsBE,MAAAA,OAAO,EAAEG,KAAK,CAACC,MAAN,CAAaN,KAAb,CAAmBO,IAAnB,GAA0BC,MAA1B,GAAmC;AAAlE,KAAP;AACD;;AACD,SAAO;AAAER,IAAAA,KAAK,EAAE,EAAT;AAAaE,IAAAA,OAAO,EAAE;AAAtB,GAAP;AACD,CARD;;AAUA,MAAMO,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB;AACA;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCtB,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACuB,eAAD,EAAkBC,kBAAlB,IAAwCxB,QAAQ,EAAtD;AACA,QAAM,CAACyB,WAAD,EAAcC,cAAd,IAAgC1B,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAM,CAAC2B,UAAD,EAAaC,aAAb,IAA8B1B,UAAU,CAACI,YAAD,EAAe;AAC3DI,IAAAA,KAAK,EAAE,EADoD;AAE3DE,IAAAA,OAAO,EAAE;AAFkD,GAAf,CAA9C;AAIA,QAAM,CAACiB,YAAD,EAAeC,eAAf,IAAkC5B,UAAU,CAACY,cAAD,EAAiB;AACjEJ,IAAAA,KAAK,EAAE,EAD0D;AAEjEE,IAAAA,OAAO,EAAE;AAFwD,GAAjB,CAAlD;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM,CAEZ,CAFD;AAGD,GAJQ,EAIN,EAJM,CAAT,CAfuB,CAqBvB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAM8B,kBAAkB,GAAIhB,KAAD,IAAW;AACpCa,IAAAA,aAAa,CAAC;AAACnB,MAAAA,IAAI,EAAE,YAAP;AAAqBE,MAAAA,GAAG,EAAEI,KAAK,CAACC,MAAN,CAAaN;AAAvC,KAAD,CAAb,CADoC,CAEpC;;AACAgB,IAAAA,cAAc,CACZX,KAAK,CAACC,MAAN,CAAaN,KAAb,CAAmBG,QAAnB,CAA4B,GAA5B,KAAoCgB,YAAY,CAACjB,OADrC,CAAd;AAGD,GAND;;AAQA,QAAMoB,qBAAqB,GAAIjB,KAAD,IAAW;AACvCe,IAAAA,eAAe,CAAC;AAACrB,MAAAA,IAAI,EAAE,YAAP;AAAqBE,MAAAA,GAAG,EAAEI,KAAK,CAACC,MAAN,CAAaN;AAAvC,KAAD,CAAf;AACAgB,IAAAA,cAAc,CACZC,UAAU,CAACjB,KAAX,CAAiBG,QAAjB,CAA0B,GAA1B,KAAkCE,KAAK,CAACC,MAAN,CAAaN,KAAb,CAAmBO,IAAnB,GAA0BC,MAA1B,GAAmC,CADzD,CAAd;AAGD,GALD;;AAOA,QAAMe,oBAAoB,GAAG,MAAM;AACjCL,IAAAA,aAAa,CAAC;AAACnB,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAb,CADiC,CAEjC;AACD,GAHD;;AAKA,QAAMyB,uBAAuB,GAAG,MAAM;AACpCN,IAAAA,aAAa,CAAC;AAACnB,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAb,CADoC,CAEpC;AACD,GAHD;;AAKA,QAAM0B,aAAa,GAAIpB,KAAD,IAAW;AAC/BA,IAAAA,KAAK,CAACqB,cAAN;AACAhB,IAAAA,KAAK,CAACiB,OAAN,CAAcV,UAAU,CAACjB,KAAzB,EAAgCW,eAAhC;AACD,GAHD;;AAKA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAEjB,OAAO,CAACkC,KAAzB;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEH,aAAhB;AAAA,8BACE;AACE,QAAA,SAAS,EAAG,GAAE/B,OAAO,CAACmC,OAAQ,IAAGZ,UAAU,CAACf,OAAX,KAAuB,KAAvB,GAA+BR,OAAO,CAACoC,OAAvC,GAAiD,EAC/E,EAFL;AAAA,gCAIE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,EAAE,EAAC,OAFL;AAGE,UAAA,KAAK,EAAEb,UAAU,CAACjB,KAHpB;AAIE,UAAA,QAAQ,EAAEqB,kBAJZ;AAKE,UAAA,MAAM,EAAEE;AALV;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAcE;AACE,QAAA,SAAS,EAAG,GAAE7B,OAAO,CAACmC,OAAQ,IAAGhB,eAAe,KAAK,KAApB,GAA4BnB,OAAO,CAACoC,OAApC,GAA8C,EAC5E,EAFL;AAAA,gCAIE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,EAAE,EAAC,UAFL;AAGE,UAAA,KAAK,EAAEnB,eAHT;AAIE,UAAA,QAAQ,EAAEW,qBAJZ;AAKE,UAAA,MAAM,EAAEE;AALV;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,eA2BE;AAAK,QAAA,SAAS,EAAE9B,OAAO,CAACqC,OAAxB;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAErC,OAAO,CAACsC,GAAzC;AAA8C,UAAA,QAAQ,EAAE,CAACjB,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA3BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD,CArGD;;GAAMN,K;;KAAAA,K;AAuGN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect, useReducer } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'User_Input') {\n    return { value: action.val, isValid: action.val.includes('@')}\n  }\n  if (action.type === 'Input_Blur') {\n    return { value: state.value, isValid: state.value.includes('@') }\n  }\n  return { value: '', isValid: false }\n};\nconst paswordReducer = (state, action) => {\n  if (action.type === 'Pasword_Input') {\n    return { value: action.val, isValid: event.target.value.trim().length > 6}\n  }\n  if (action.type === 'Pasword_Blur') {\n    return { value: state.value, isValid: event.target.value.trim().length > 6}\n  }\n  return { value: '', isValid: false }\n};\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: false,\n  });\n  const [paswordState, dispatchPasword] = useReducer(paswordReducer, {\n    value: '',\n    isValid: false,\n  })\n  useEffect(() => {\n    return () => {\n\n    };\n  }, []);\n\n  // useEffect(() => {\n  //   const identifier = setTimeout(() => {\n  //     setFormIsValid(\n  //       enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //     );\n  //   }, 500);\n\n  //CleanupFunctions whenever conmponent unmounts from the DOM\n  //   return () => {\n  //     clearTimeout(identifier);\n  //   };\n  // }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({type: 'User_Input', val: event.target.value});\n    // setEnteredEmail(event.target.value);\n    setFormIsValid(\n      event.target.value.includes('@') && paswordState.isValid\n    );\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPasword({type: 'User_Input', val: event.target.value});\n    setFormIsValid(\n      emailState.value.includes('@') && event.target.value.trim().length > 6\n    );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({type: 'Input_Blur'});\n    // setEmailIsValid(emailState.isValid.includes('@'));\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchEmail({type: 'Input_Blur'});\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, enteredPassword);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${emailState.isValid === false ? classes.invalid : ''\n            }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${passwordIsValid === false ? classes.invalid : ''\n            }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}